# This is a basic workflow to help you get started with Actions

name: Crowdin Update

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ feature/CrowdinAction ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    if: "contains(github.event.head_commit.message, 'spelling') || contains(github.event.head_commit.message, 'localiz') || contains(github.event.head_commit.message, 'l10n') || contains(github.event.head_commit.message, 'internationaliz') || contains(github.event.head_commit.message, 'i18n')"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    - name: Install Overcrowdin
      run: dotnet tool install -g overcrowdin

    - name: Setup MSBuild Path
      uses: warrenbuckley/Setup-MSBuild@v1
       
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
     
    - name: Restore NuGet Packages
      run: nuget restore Chorus.sln

    - name: Download Deps
      run: build/buildupdate.win.sh
      shell: bash
 
    - name: Build Chorus 
      run: msbuild Chorus.sln /p:Configuration=Release

    - name: Generate Fresh Chorus.xlf
      run: |
        msbuild l10n.proj /t:restore
        msbuild l10n.proj /t:UpdateCrowdin
      working-directory: ./l10n
 

# Runs a set of commands using the runners shell
#    - name: Generate latest Palaso.en.xlf
#      run: |
#        $GITHUB_WORKSPACE/packages/L10NSharp.2.0.51/lib/
#        echo test, and deploy your project.
